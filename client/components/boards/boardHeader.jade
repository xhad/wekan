template(name="boardHeaderBar")
  h1.header-board-menu
    with currentBoard
      a(class="{{#if currentUser.isBoardAdmin}}js-edit-board-title{{else}}is-disabled{{/if}}")
        +viewer
          = title

  .board-header-btns.left
    unless isMiniScreen
      unless isSandstorm
        if currentBoard
          if currentUser
            a.board-header-btn.js-star-board(class="{{#if isStarred}}is-active{{/if}}"
              title="{{#if isStarred}}{{_ 'click-to-unstar'}}{{else}}{{_ 'click-to-star'}}{{/if}} {{_ 'starred-boards-description'}}")
              i.fa(class="fa-star{{#unless isStarred}}-o{{/unless}}")
              if showStarCounter
                span
                  = currentBoard.stars

            a.board-header-btn(
              class="{{#if currentUser.isBoardAdmin}}js-change-visibility{{else}}is-disabled{{/if}}"
              title="{{_ currentBoard.permission}}")
              i.fa(class="{{#if currentBoard.isPublic}}fa-globe{{else}}fa-lock{{/if}}")
              span {{_ currentBoard.permission}}

            a.board-header-btn.js-watch-board(
              title="{{_ watchLevel }}")
              if $eq watchLevel "watching"
                i.fa.fa-eye
              if $eq watchLevel "tracking"
                i.fa.fa-bell
              if $eq watchLevel "muted"
                i.fa.fa-bell-slash
              span {{_ watchLevel}}

          else
            a.board-header-btn.js-log-in(
              title="{{_ 'log-in'}}")
              i.fa.fa-sign-in
              span {{_ 'log-in'}}

  .board-header-btns.right
    if currentBoard
      if isMiniScreen
        unless isSandstorm
          if currentUser
            a.board-header-btn.js-star-board(class="{{#if isStarred}}is-active{{/if}}"
              title="{{#if isStarred}}{{_ 'click-to-unstar'}}{{else}}{{_ 'click-to-star'}}{{/if}} {{_ 'starred-boards-description'}}")
              i.fa(class="fa-star{{#unless isStarred}}-o{{/unless}}")
              if showStarCounter
                span
                  = currentBoard.stars

            a.board-header-btn(
              class="{{#if currentUser.isBoardAdmin}}js-change-visibility{{else}}is-disabled{{/if}}"
              title="{{_ currentBoard.permission}}")
              i.fa(class="{{#if currentBoard.isPublic}}fa-globe{{else}}fa-lock{{/if}}")
              span {{_ currentBoard.permission}}

            a.board-header-btn.js-watch-board(
              title="{{_ watchLevel }}")
              if $eq watchLevel "watching"
                i.fa.fa-eye
              if $eq watchLevel "tracking"
                i.fa.fa-bell
              if $eq watchLevel "muted"
                i.fa.fa-bell-slash
              span {{_ watchLevel}}

          else
            a.board-header-btn.js-log-in(
              title="{{_ 'log-in'}}")
              i.fa.fa-sign-in
              span {{_ 'log-in'}}

      if isSandstorm
        if currentUser
          a.board-header-btn.js-open-archived-board
            i.fa.fa-archive
            span {{_ 'archives'}}

      a.board-header-btn.js-open-filter-view(
          title="{{#if Filter.isActive}}{{_ 'filter-on-desc'}}{{else}}{{_ 'filter'}}{{/if}}"
          class="{{#if Filter.isActive}}emphasis{{/if}}")
        i.fa.fa-filter
        span {{#if Filter.isActive}}{{_ 'filter-on'}}{{else}}{{_ 'filter'}}{{/if}}
        if Filter.isActive
          a.board-header-btn-close.js-filter-reset(title="{{_ 'filter-clear'}}")
            i.fa.fa-times-thin

      a.board-header-btn.js-open-search-view(title="{{_ 'search'}}")
        i.fa.fa-search
        span {{_ 'search'}}

      a.board-header-btn.js-toggle-board-view(
        title="{{_ 'board-view'}}")
        i.fa.fa-th-large
        span {{_ currentUser.profile.boardView}}

      if canModifyBoard
        a.board-header-btn.js-multiselection-activate(
            title="{{#if MultiSelection.isActive}}{{_ 'multi-selection-on'}}{{else}}{{_ 'multi-selection'}}{{/if}}"
            class="{{#if MultiSelection.isActive}}emphasis{{/if}}")
          i.fa.fa-check-square-o
          span {{#if MultiSelection.isActive}}{{_ 'multi-selection-on'}}{{else}}{{_ 'multi-selection'}}{{/if}}
          if MultiSelection.isActive
            a.board-header-btn-close.js-multiselection-reset(title="{{_ 'filter-clear'}}")
              i.fa.fa-times-thin

      .separator
      a.board-header-btn.js-open-board-menu(title="{{_ 'boardMenuPopup-title'}}")
        i.board-header-btn-icon.fa.fa-navicon

template(name="boardMenuPopup")
  ul.pop-over-list
    li: a.js-custom-fields {{_ 'custom-fields'}}
    li: a.js-open-archives {{_ 'archived-items'}}
    if currentUser.isBoardAdmin
      li: a.js-change-board-color {{_ 'board-change-color'}}
    //-
      XXX Language should be handled by sandstorm, but for now display a
      language selection link in the board menu. This link is normally present
      in the header bar that is not displayed on sandstorm.
    if isSandstorm
      li: a.js-change-language {{_ 'language'}}
  unless isSandstorm
    if currentUser.isBoardAdmin
      hr
      ul.pop-over-list
        li: a(href="{{exportUrl}}", download="{{exportFilename}}") {{_ 'export-board'}}
        li: a.js-archive-board {{_ 'archive-board'}}
        li: a.js-outgoing-webhooks {{_ 'outgoing-webhooks'}}
      hr
      ul.pop-over-list
        li: a.js-subtask-settings {{_ 'subtask-settings'}}

  if isSandstorm
    hr
    ul.pop-over-list
      li: a(href="{{exportUrl}}", download="{{exportFilename}}") {{_ 'export-board'}}
      li: a.js-import-board {{_ 'import-board-c'}}
    hr
    ul.pop-over-list
      li: a.js-subtask-settings {{_ 'subtask-settings'}}

template(name="boardVisibilityList")
  ul.pop-over-list
    li
      with "private"
        a.js-select-visibility
          i.fa.fa-lock.colorful
          | {{_ 'private'}}
          if visibilityCheck
            i.fa.fa-check
          span.sub-name {{_ 'private-desc'}}
    li
      with "public"
        a.js-select-visibility
          i.fa.fa-globe.colorful
          | {{_ 'public'}}
          if visibilityCheck
            i.fa.fa-check
          span.sub-name {{_ 'public-desc'}}

template(name="boardChangeVisibilityPopup")
  +boardVisibilityList

template(name="boardChangeWatchPopup")
  ul.pop-over-list
    li
      with "watching"
        a.js-select-watch
          i.fa.fa-eye.colorful
          | {{_ 'watching'}}
          if watchCheck
            i.fa.fa-check
          span.sub-name {{_ 'watching-info'}}
    li
      with "tracking"
        a.js-select-watch
          i.fa.fa-bell.colorful
          | {{_ 'tracking'}}
          if watchCheck
            i.fa.fa-check
          span.sub-name {{_ 'tracking-info'}}
    li
      with "muted"
        a.js-select-watch
          i.fa.fa-bell-slash.colorful
          | {{_ 'muted'}}
          if watchCheck
            i.fa.fa-check
          span.sub-name {{_ 'muted-info'}}

template(name="boardChangeColorPopup")
  .board-backgrounds-list.clearfix
    each backgroundColors
      .board-background-select.js-select-background
        span.background-box(class="board-color-{{this}}")
          if isSelected
            i.fa.fa-check

template(name="boardSubtaskSettingsPopup")
  form.board-subtask-settings
    h3 {{_ 'show-parent-in-minicard'}}
      a#prefix-with-full-path.flex.js-field-show-parent-in-minicard(class="{{#if $eq presentParentTask 'prefix-with-full-path'}}is-checked{{/if}}")
        .materialCheckBox(class="{{#if $eq presentParentTask 'prefix-with-full-path'}}is-checked{{/if}}")
        span {{_ 'prefix-with-full-path'}}
      a#prefix-with-parent.flex.js-field-show-parent-in-minicard(class="{{#if $eq presentParentTask 'prefix-with-parent'}}is-checked{{/if}}")
        .materialCheckBox(class="{{#if $eq presentParentTask 'prefix-with-parent'}}is-checked{{/if}}")
        span {{_ 'prefix-with-parent'}}
      a#subtext-with-full-path.flex.js-field-show-parent-in-minicard(class="{{#if $eq presentParentTask 'subtext-with-full-path'}}is-checked{{/if}}")
        .materialCheckBox(class="{{#if $eq presentParentTask 'subtext-with-full-path'}}is-checked{{/if}}")
        span {{_ 'subtext-with-full-path'}}
      a#subtext-with-parent.flex.js-field-show-parent-in-minicard(class="{{#if $eq presentParentTask 'subtext-with-parent'}}is-checked{{/if}}")
        .materialCheckBox(class="{{#if $eq presentParentTask 'subtext-with-parent'}}is-checked{{/if}}")
        span {{_ 'subtext-with-parent'}}
      a#no-parent.flex.js-field-show-parent-in-minicard(class="{{#if $eq presentParentTask 'no-parent'}}is-checked{{/if}}")
        .materialCheckBox(class="{{#if $eq presentParentTask 'no-parent'}}is-checked{{/if}}")
        span {{_ 'no-parent'}}
    div
      hr

    div.check-div
      a.flex.js-field-has-subtasks(class="{{#if allowsSubtasks}}is-checked{{/if}}")
        .materialCheckBox(class="{{#if allowsSubtasks}}is-checked{{/if}}")
        span {{_ 'show-subtasks-field'}}

    label
      | {{_ 'deposit-subtasks-board'}}
      select.js-field-deposit-board(disabled="{{#unless allowsSubtasks}}disabled{{/unless}}")
          each boards
            if isBoardSelected
              option(value=_id selected="selected") {{title}}
            else
              option(value=_id) {{title}}
          if isNullBoardSelected
            option(value='null' selected="selected") {{_ 'custom-field-dropdown-none'}}
          else
            option(value='null') {{_ 'custom-field-dropdown-none'}}
    div
      hr

    label
      | {{_ 'deposit-subtasks-list'}}
      select.js-field-deposit-list(disabled="{{#unless hasLists}}disabled{{/unless}}")
          each lists
            if isListSelected
              option(value=_id selected="selected") {{title}}
            else
              option(value=_id) {{title}}

template(name="createBoard")
  form
    label
      | {{_ 'title'}}
      input.js-new-board-title(type="text" placeholder="{{_ 'bucket-example'}}" autofocus required)
    if visibilityMenuIsOpen.get
      +boardVisibilityList
    else
      p.quiet
        if $eq visibility.get 'public'
          span.fa.fa-globe.colorful
          = " "
          | {{{_ 'board-public-info'}}}
        else
          span.fa.fa-lock.colorful
          = " "
          | {{{_ 'board-private-info'}}}
        a.js-change-visibility {{_ 'change'}}.
    input.primary.wide(type="submit" value="{{_ 'create'}}")
    span.quiet
      | {{_ 'or'}}
      a.js-import-board {{_ 'import-board'}}

template(name="chooseBoardSource")
  ul.pop-over-list
    li
      a(href="{{pathFor '/import/trello'}}") {{_ 'from-trello'}}
    li
      a(href="{{pathFor '/import/wekan'}}") {{_ 'from-wekan'}}

template(name="boardChangeTitlePopup")
  form
    label
      | {{_ 'title'}}
      input.js-board-name(type="text" value=title autofocus)
    label
      | {{_ 'description'}}
      textarea.js-board-desc= description
    input.primary.wide(type="submit" value="{{_ 'rename'}}")

template(name="archiveBoardPopup")
  p {{_ 'close-board-pop'}}
  button.js-confirm.negate.full(type="submit") {{_ 'archive'}}

template(name="outgoingWebhooksPopup")
  each integrations
    form.integration-form
      if title
        h4 {{title}}
      else
        h4 {{_ 'no-name'}}
      label
        | URL
        input.js-outgoing-webhooks-url(type="text" name="url" value=url)
        input(type="hidden" value=_id name="id")
      input.primary.wide(type="submit" value="{{_ 'save'}}")
  form.integration-form
    h4
      | {{_ 'new-outgoing-webhook'}}
    label
      | URL
      input.js-outgoing-webhooks-url(type="text" name="url" autofocus)
    input.primary.wide(type="submit" value="{{_ 'save'}}")
